process {
    clusterOptions = {"-l h_vmem=${task.memory.bytes/task.cpus}"}
    executor = 'sge'
    queue = 'igmm_long'

    scratch = false

    beforeScript = """
    . /etc/profile.d/modules.sh
    module load roslin/singularity/3.5.3
    # workaround to make non-sandbox mode work, SGE sets this variable
    # to the root user runtime directory, causing permission issues
    unset XDG_RUNTIME_DIR
    export SINGULARITY_TMPDIR="\$TMPDIR"
    """

    cpus=1
    memory='4 GB'

    withLabel: fastq {
           container = 'docker://oalmelid/baal-nf-env:latest'
    }

    withLabel: python {
           container = 'docker://oalmelid/baal-nf-env:latest'
    }

    withLabel: bigmem {
	   memory = { task.exitStatus == 140 ? '32 GB' : '16 GB' }
    }
 
    withLabel: retry_mem {
	   memory = { task.exitStatus == 140 ? '16 GB' : '8 GB' }
    }

    withLabel: baal_chip {
           container = 'docker://oalmelid/baal-chip-env:latest'    
    }


    withLabel: mpi {
        cpus = 16
        time = '2d'
        penv = "scatter"
        beforeScript = """
        . /etc/profile.d/modules.sh
        module load openmpi/4.0.0
        module load roslin/singularity/3.5.3
        # workaround to make non-sandbox mode work, SGE sets this variable
        # to the root user runtime directory, causing permission issues
        unset XDG_RUNTIME_DIR
        export SINGULARITY_TMPDIR="\$TMPDIR"
        """
    }

}

env {
    BOWTIE2_INDEXES = "/exports/igmm/eddie/ponting-lab/oyvind/bowtie/indexes"
}

params {
    fastq_screen_conf = '/exports/igmm/eddie/ponting-lab/oyvind/fastq_screen/fastq_screen.conf'
    mpiflags = '--mca btl self,tcp --mca btl_tcp_if_include 192.41.104.0/23'
}

executor {
    queueSize = 200
}

singularity {
    enabled = true
    autoMounts = true
    pullTimeout = '1h'
    envWhitelist = 'SINGULARITY_TMPDIR'
}
